var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var f=a[d];f in c||(c[f]={});c=c[f]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};
$jscomp.polyfill("Object.values",function(a){return a?a:function(a){var b=[],d;for(d in a)$jscomp.owns(a,d)&&b.push(a[d]);return b}},"es8","es3");function Vec2(a,b){return new Vec2.init(a,b)}Vec2.init=function(a,b){this.x=a;this.y=b};Vec2.init.prototype=Vec2.prototype;Vec2.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Vec2.prototype.add=function(a){return Vec2(a.x+this.x,a.y+this.y)};Vec2.prototype.subtract=function(a){return Vec2(this.x-a.x,this.y-a.y)};
Vec2.prototype.scale=function(a){return Vec2(this.x*a,this.y*a)};Vec2.prototype.dot=function(a){return this.x*a.x+this.y*a.y};Vec2.prototype.cross=function(a){return this.x*a.y-this.y*a.x};Vec2.prototype.rotate=function(a,b){var c=[],d=this.x-a.x,f=this.y-a.y;c[0]=d*Math.cos(b)-f*Math.sin(b);c[1]=d*Math.sin(b)+f*Math.cos(b);c[0]+=a.x;c[1]+=a.y;return Vec2(c[0],c[1])};Vec2.prototype.normalize=function(){var a=this.length();0<a&&(a=1/a);return Vec2(this.x*a,this.y*a)};
Vec2.prototype.perp=function(){return Vec2(this.y,-this.x)};Vec2.prototype.distance=function(a){var b=this.x-a.x;a=this.y-a.y;return Math.sqrt(b*b+a*a)};Vec2.prototype.midpoint=function(a){return Vec2((this.x+a.x)/2,(this.y+a.y)/2)};Vec2.prototype.vectorFromAngle=function(a,b){return Vec2(a*Math.cos(b),a*Math.sin(b))};Vec2.prototype.angleFromVector=function(a){return Math.atan2(this.y-a.y,this.x-a.x)};
function Engine(){var a=this;this.hasChanged=this.movement=!1;this.currentTime;this.elapsedTime;this.previousTime=performance.now();this.lagTime=0;this.kFPS=60;this.updateIntervalInSeconds=this.frameTime=1/this.kFPS;this.kMPF=1E3*this.frameTime;this.allBodies=[];this.allConstraints=[];this.physics=new Kala.Physics;this.events=new Kala.Events;this.collisionResponse;this.gravity=Vec2(0,10);this.add=function(b){if(Array.isArray(b))b.forEach(function(b){b instanceof Body&&(a.allBodies.push(b),a.applyGravity(a.allBodies[a.allBodies.length-
1]))});else if(b instanceof Body)a.allBodies.push(b),this.applyGravity(a.allBodies[a.allBodies.length-1]);else throw"Only objects of type Body can be added to the engine";};this.removeBodyByIndex=function(a){this.allBodies.splice(a,1);this.hasChanged=!0};this.removeBody=function(a){a=this.allBodies.indexOf(a);-1!=a&&this.removeBodyByIndex(a);this.hasChanged=!0};this.addConstraint=function(a){this.allConstraints.push(a)};this.removeConstraint=function(a){this.allConstraints.splice(a,1)};this.applyGravityAllBodies=
function(){for(var b=0;b<a.allBodies.length;b++)this.applyGravity(a.allBodies[b])};this.applyGravity=function(a){a.acceleration=0!==a.invMass?this.gravity:Vec2(0,0)};this.update=function(){for(var a=0;a<this.allBodies.length;a++)this.allBodies[a].update(this)};this.runGameLoop=function(b){requestAnimationFrame(function(){a.runGameLoop(b)});a.currentTime=performance.now();a.elapsedTime=a.currentTime-a.previousTime;a.previousTime=a.currentTime;a.lagTime+=a.elapsedTime;this.events.customEvents&&Object.values(this.events.customEvents).forEach(function(a){a.call()});
this.collisionInfo&&Object.values(this.events.collisionEvents).forEach(function(a){a.call()});for(b&&b.update(this);a.lagTime>=a.kMPF;)a.lagTime-=a.kMPF,this.physics.maintainConstraints(a),this.collisionInfo=this.physics.collision(this),this.update(b)};this.initializeEngineCore=function(b){a.runGameLoop(b)}}
function PixiRender(a,b,c,d,f){var e;function g(){e=PIXI.Sprite.from("imgs/circle.png").texture;switch(c){case "stone":n=h.loader.resources.sheet.textures["elementMetal011.png"];break;case "space":n=h.loader.resources.ship.texture;e=h.loader.resources.asteroid1.texture;break;case "pool":n=h.loader.resources.wood.texture}}var h=this;this.app=new PIXI.Application({height:a,width:b,view:f,backgroundColor:14137255,antialias:!0});var l=[37594,16213242,4145535,10769040];this.scale=d;console.log(f);f||document.body.appendChild(this.app.view);
this.app.stage.scale.x=this.app.stage.scale.y=d;var k={};this.bodyContainer=new PIXI.Container;this.lineContainer=new PIXI.Container;this.loader=new PIXI.Loader;c=c||"stone";var n=e=void 0;switch(c){case "space":this.loader.add("ship","imgs/AsteroidGame/enemyBlue3.png").add("asteroid1","imgs/AsteroidGame/meteorBrown_big1.png").add("explosion","imgs/AsteroidGame/ExplosionAnimation.json").load(g);break;case "stone":this.loader.add("sheet","imgs/spritesheet_metal.json").load(g);break;case "pool":this.loader.add("wood",
"imgs/PoolGameImgs/woodTexture.jpg").add("whiteball","imgs/PoolGameImgs/whiteball.png").add("poolballs","imgs/PoolGameImgs/redball.png").add("pot","imgs/PoolGameImgs/pot.png").load(g)}this.app.stage.addChild(this.bodyContainer);this.app.stage.addChild(this.lineContainer);this.addRectangle=function(a){k[a.bodyID]=new PIXI.Sprite(a.render.texture||n);k[a.bodyID].anchor.x=k[a.bodyID].anchor.y=.5;this.bodyContainer.addChild(k[a.bodyID]);k[a.bodyID].renderUpdate=this.updateBody;return k[a.bodyID]};this.addCircle=
function(a){k[a.bodyID]=new PIXI.Sprite(a.render.texture||e);k[a.bodyID].anchor.x=k[a.bodyID].anchor.y=.5;k[a.bodyID].height=k[a.bodyID].width=2*a.radius;this.bodyContainer.addChild(k[a.bodyID]);k[a.bodyID].renderUpdate=this.updateBody;return k[a.bodyID]};this.addPolygon=function(a){k[a.bodyID]||(k[a.bodyID]=new PIXI.Graphics,a.render.color=a.render.color?a.render.color:l[Math.floor(Math.random()*l.length)],this.bodyContainer.addChild(k[a.bodyID]));k[a.bodyID].renderUpdate=this.updatePolygon;return k[a.bodyID]};
this.addShape=function(a){switch(a.type){case "Rectangle":return this.addRectangle(a);case "Circle":return this.addCircle(a);case "Polygon":return this.addPolygon(a)}};this.addSprites=function(a){if(Array.isArray(a))for(var b=0;b<a.length;b++)this.addSprite(a[b]);else this.addSprite(a)};this.removeSprite=function(a){a=this.bodyContainer.getChildAt(a);void 0!=a&&this.bodyContainer.removeChild(a)};var m=new PIXI.Graphics;this.drawLine=function(a,b){m.clear();this.lineContainer.addChild(m);m.lineStyle(1/
d,0,1);m.moveTo(a.x,a.y);m.lineTo(b.x,b.y)};this.updateBody=function(a){var b=k[a.bodyID];b.position.x=a.center.x;b.position.y=a.center.y;b.width=a.radius?2*a.radius:a.width;b.height=a.radius?2*a.radius:a.height;b.rotation=a.angle};this.updatePolygon=function(a){var b=k[a.bodyID];b.clear();b.lineStyle(0/d,a.lineColor||260348);b.lineColor;b.beginFill(a.render.color,1);b.drawPolygon(a.vertexToPath());b.endFill()};this.clear=function(){k={};this.bodyContainer.removeChildren();this.lineContainer.removeChildren()};
this.update=function(a){a.hasChanged&&(this.clear(),a.hasChanged=!1);for(var b=a.allBodies,c=0;c<a.allConstraints.length;c++)this.drawLine(a.allConstraints[c].bodyA.center,a.allConstraints[c].bodyB.center);for(c=0;c<b.length;c++)(a=k[b[c].bodyID])||(a=this.addShape(b[c])),a.renderUpdate(b[c])}}
function Physics(){return{collision:function(a){var b,c,d,f=new CollisionInfo;for(d=0;15>d;d++)for(b=0;b<a.allBodies.length;b++)for(c=b+1;c<a.allBodies.length;c++)if(a.allBodies[b].broadphaseTest(a.allBodies[c])&&a.allBodies[b].collisionTest(a.allBodies[c],f)){0>f.getNormal().dot(a.allBodies[c].center.subtract(a.allBodies[b].center))&&f.changeDir();if(!0===a.allBodies[b].isSensor||!0===a.allBodies[c].isSensor)return f.bodyA=a.allBodies[b],f.bodyAIndex=b,f.bodyB=a.allBodies[c],f.bodyBIndex=c,f;var e=
a.allBodies[b],g=a.allBodies[c];var h=f;if(0!==e.invMass||0!==g.invMass){var l=e,k=g,n=h,m=l.invMass,p=k.invMass,r=n.getDepth()/(m+p)*.8;n=n.getNormal().scale(r);l.move(n.scale(-m));k.move(n.scale(p));l=h.getNormal();k=h.start.scale(g.invMass/(e.invMass+g.invMass));h=h.end.scale(e.invMass/(e.invMass+g.invMass));h=k.add(h);k=h.subtract(e.center);m=h.subtract(g.center);h=e.velocity.add(Vec2(-1*e.angularVelocity*k.y,e.angularVelocity*k.x));p=g.velocity.add(Vec2(-1*g.angularVelocity*m.y,g.angularVelocity*
m.x)).subtract(h);h=p.dot(l);if(!(0<h)){n=Math.min(e.restitution,g.restitution);r=Math.min(e.friction,g.friction);var t=k.cross(l),u=m.cross(l);h=-(1+n)*h/(e.invMass+g.invMass+t*t*e.inertia+u*u*g.inertia);var q=l.scale(h);e.velocity=e.velocity.subtract(q.scale(e.invMass));g.velocity=g.velocity.add(q.scale(g.invMass));e.angularVelocity-=t*h*e.inertia;g.angularVelocity+=u*h*g.inertia;l=p.subtract(l.scale(p.dot(l)));l=l.normalize().scale(-1);k=k.cross(l);m=m.cross(l);p=-(1+n)*p.dot(l)*r;p/=e.invMass+
g.invMass+k*k*e.inertia+m*m*g.inertia;p>h&&(p=h);q=l.scale(p);e.velocity=e.velocity.subtract(q.scale(e.invMass));g.velocity=g.velocity.add(q.scale(g.invMass));e.angularVelocity-=k*p*e.inertia;g.angularVelocity+=m*p*g.inertia}}}},maintainConstraints:function(a){if(!0===a.movement)for(var b=new CollisionInfo,c=0;15>c;c++)for(var d=0;d<a.allConstraints.length;d++)a.allConstraints[d].maintainConstraint(b)},positionalCorrectionFlag:!0}}var Common={};
(function(){Common.globalID=0;Common.extend=function(a,b){b=Object.create(b.prototype);b.constructor=a;a.prototype=b;return a};Common.incrementIndexer=function(){return Common.globalID+=1}})();function Indexer(){this.bodyIndex=-1}Indexer.prototype.incrementIndex=function(){return this.bodyIndex+=1};function Events(){this.customEvents={};this.collisionEvents={}}Events.prototype.addCustomEvent=function(a){this.customEvents[a.name]=a};
Events.prototype.addCollisionEvent=function(a){this.collisionEvents[a.name]=a};var bodyIndex=new Indexer;
function Body(a,b,c,d,f,e){this.bodyID=Common.incrementIndexer();this.center=Vec2(a,b);this.inertia=0;this.invMass=void 0!==c?c:1;this.friction=void 0!==d?d:.8;this.restitution=void 0!==f?f:.2;this.velocity=Vec2(0,0);0!==this.invMass&&(this.invMass=1/this.invMass);this.acceleration=Vec2(0,0);this.boundRadius=this.angularAcceleration=this.angularVelocity=this.angle=0;this.isSensor=!1;this.dampenValue=.985;this.render={};e&&(this.isSensor=void 0!=e.isSensor?e.isSensor:!1,this.name=e.name&&"string"===
typeof e.name?e.name:"unnamed",this.dampen=e.dampen&&"boolean"===typeof e.dampen?e.dampen:!1,e.dampenValue&&(this.dampenValue=e.dampenValue),this.bodyPositionalCorrection=e.bodyPositionalCorrection?e.bodyPositionalCorrection:!0)}
Body.prototype.update=function(a){a.movement&&(a=a.updateIntervalInSeconds,this.velocity=this.velocity.add(this.acceleration.scale(a)),this.dampen&&(this.velocity=this.velocity.scale(this.dampenValue),this.angularVelocity*=this.dampenValue),this.move(this.velocity.scale(a)),this.angularVelocity+=this.angularAcceleration*a,this.rotate(this.angularVelocity*a))};Body.prototype.broadphaseTest=function(a){if(this.AABB&&a.AABB){if(!this.AABBTest(a))return!1}else if(!this.boundTest(a))return!1;return!0};
Body.prototype.boundTest=function(a){var b=a.center.subtract(this.center);a=this.boundRadius+a.boundRadius;return b.length()>a?!1:!0};Body.prototype.AABBTest=function(a){var b=this.AABB;a=a.AABB;return b.minBounds.x<a.maxBounds.x&&b.maxBounds.x>a.minBounds.x&&b.minBounds.y<a.maxBounds.y&&b.maxBounds.y>a.minBounds.y?!0:!1};
Body.prototype.calculateAABB=function(){for(var a=999999,b=-999999,c=999999,d=-999999,f=0;f<this.vertex.length;f++){var e=this.vertex[f];e.x>b&&(b=e.x);e.x<a&&(a=e.x);e.y>d&&(d=e.y);e.y<c&&(c=e.y)}return{minBounds:Vec2(a,c),maxBounds:Vec2(b,d)}};Body.prototype.findInterval=function(a){a=a.perp();var b;var c=b=this.vertex[0].dot(a);for(var d=1;d<this.vertex.length;d++){var f=this.vertex[d].dot(a);f>c&&(c=f);f<b&&(b=f)}return{min:b,max:c}};
Body.prototype.updateMass=function(a){var b=0!==this.invMass?1/this.invMass:0;b+=a;0>=b?(this.invMass=0,this.velocity=Vec2(0,0),this.acceleration=Vec2(0,0),this.angularAcceleration=this.angularVelocity=0):this.invMass=1/b;this.updateInertia()};Body.prototype.addAcceleration=function(a){this.acceleration=this.acceleration.add(a)};Body.prototype.subtractAcceleration=function(a){this.acceleration=this.acceleration.subtract(a)};Body.prototype.updateInertia=function(){};
function CollisionInfo(){this.bodyA;this.bodyB;this.bodyAIndex;this.bodyBIndex;this.depth=0;this.normal=new Vec2(0,0);this.start=new Vec2(0,0);this.end=new Vec2(0,0)}CollisionInfo.prototype.setNormal=function(a){this.normal=a};CollisionInfo.prototype.getDepth=function(){return this.depth};CollisionInfo.prototype.setDepth=function(a){this.depth=a};CollisionInfo.prototype.getNormal=function(){return this.normal};
CollisionInfo.prototype.setInfo=function(a,b,c){this.depth=a;this.normal=b;this.start=c;this.end=c.add(b.scale(a))};CollisionInfo.prototype.changeDir=function(){this.normal=this.normal.scale(-1);var a=this.start;this.start=this.end;this.end=a};
var Polygon=function(a,b,c,d,f){this.vertex=a.slice();a=this.findCentroid();Body.call(this,a.x,a.y,b,c,d,f);this.sortVertices();this.type="Polygon";this.edges=this.calculateEdges();this.faceNormal=this.calculateFaceNormals();this.AABB=this.calculateAABB();this.boundRadius=this.calculateBoundRadius();this.updateInertia()};Common.extend(Polygon,Body);
Polygon.prototype.move=function(a){for(var b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].add(a);this.center=this.center.add(a);this.edges=this.calculateEdges();this.faceNormal=this.calculateFaceNormals();this.AABB=this.calculateAABB();return this};
Polygon.prototype.rotate=function(a){this.angle+=a;for(var b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].rotate(this.center,a);this.edges=this.calculateEdges();this.faceNormal=this.calculateFaceNormals();this.AABB=this.calculateAABB();return this};Polygon.prototype.calculateEdges=function(){for(var a=[],b=0;b<this.vertex.length-1;b++)a[b]=this.vertex[b].subtract(this.vertex[b+1]);a[a.length]=this.vertex[this.vertex.length-1].subtract(this.vertex[0]);return a};
Polygon.prototype.calculateFaceNormals=function(){for(var a=[],b=0;b<this.edges.length;b++)a[b]=this.edges[b].normalize();return a};Polygon.prototype.calculateAABB=function(){for(var a=999999,b=-999999,c=999999,d=-999999,f=0;f<this.vertex.length;f++){var e=this.vertex[f];e.x>b&&(b=e.x);e.x<a&&(a=e.x);e.y>d&&(d=e.y);e.y<c&&(c=e.y)}return{minBounds:Vec2(a,c),maxBounds:Vec2(b,d)}};
Polygon.prototype.calculateBoundRadius=function(){for(var a=-99999,b,c=0;c<this.vertex.length-1;c++)b=this.center.subtract(this.vertex[c]).length(),b>a&&(a=b);return a};Polygon.prototype.vertexToPath=function(){for(var a=[],b=0;b<this.vertex.length;b++)a.push(this.vertex[b].x),a.push(this.vertex[b].y);return a};
Polygon.prototype.findCentroid=function(){for(var a=0,b,c,d,f=Vec2(0,0),e=0;e<this.vertex.length-1;e++)c=this.vertex[e],d=this.vertex[e+1],b=c.x*d.y-d.x*c.y,a+=b,f.x+=(c.x+d.x)*b,f.y+=(c.y+d.y)*b;c=this.vertex[this.vertex.length-1];d=this.vertex[0];b=c.x*d.y-d.x*c.y;f.x+=(c.x+d.x)*b;f.y+=(c.y+d.y)*b;a=(a+b)/2;f.x/=6*a;f.y/=6*a;return f};Polygon.prototype.sortVertices=function(){var a=this.center;this.vertex.sort(function(b,c){return b.angleFromVector(a)-c.angleFromVector(a)})};
Polygon.prototype.draw=function(a){var b=new PIXI.Graphics;a.app.stage.addChild(b);b.lineStyle(.05,0);b.drawCircle(this.center.x,this.center.y,this.boundRadius)};
Polygon.prototype.updateInertia=function(){if(0===this.invMass)this.inertia=0;else{for(var a=0,b=0;b<this.vertex-1;b++)a+=this.vertex[b].x*this.vertex[b+1].y-this.vertex[b].y*this.vertex[b+1].x;a+=this.vertex[this.vertex.length-1].x*this.vertex[0].y-this.vertex[this.vertex.length-1].y*this.vertex[0].x;a=Math.abs(a);this.inertia=1/this.invMass*(a/2)/12;this.inertia=1/this.inertia}};
var Rectangle=function(a,b,c,d,f,e,g,h){Body.call(this,a,b,f,e,g,h);this.type="Rectangle";this.width=c;this.height=d;this.boundRadius=Math.sqrt(c*c+d*d)/2;this.vertex=[];this.faceNormal=[];this.vertex[0]=new Vec2(a-c/2,b-d/2);this.vertex[1]=new Vec2(a+c/2,b-d/2);this.vertex[2]=new Vec2(a+c/2,b+d/2);this.vertex[3]=new Vec2(a-c/2,b+d/2);this.faceNormal[0]=this.vertex[1].subtract(this.vertex[2]);this.faceNormal[0]=this.faceNormal[0].normalize();this.faceNormal[1]=this.vertex[2].subtract(this.vertex[3]);
this.faceNormal[1]=this.faceNormal[1].normalize();this.faceNormal[2]=this.vertex[3].subtract(this.vertex[0]);this.faceNormal[2]=this.faceNormal[2].normalize();this.faceNormal[3]=this.vertex[0].subtract(this.vertex[1]);this.faceNormal[3]=this.faceNormal[3].normalize();this.AABB=this.calculateAABB();this.updateInertia()};Common.extend(Rectangle,Body);
Rectangle.prototype.move=function(a){var b;for(b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].add(a);this.center=this.center.add(a);this.AABB=this.calculateAABB();return this};
Rectangle.prototype.rotate=function(a){this.angle+=a;var b;for(b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].rotate(this.center,a);this.faceNormal[0]=this.vertex[1].subtract(this.vertex[2]);this.faceNormal[0]=this.faceNormal[0].normalize();this.faceNormal[1]=this.vertex[2].subtract(this.vertex[3]);this.faceNormal[1]=this.faceNormal[1].normalize();this.faceNormal[2]=this.vertex[3].subtract(this.vertex[0]);this.faceNormal[2]=this.faceNormal[2].normalize();this.faceNormal[3]=this.vertex[0].subtract(this.vertex[1]);
this.faceNormal[3]=this.faceNormal[3].normalize();this.AABB=this.calculateAABB();return this};Rectangle.prototype.updateInertia=function(){0===this.invMass?this.inertia=0:(this.inertia=1/this.invMass*(this.width*this.width+this.height*this.height)/12,this.inertia=1/this.inertia)};var Circle=function(a,b,c,d,f,e,g){Body.call(this,a,b,d,f,e,g);this.type="Circle";this.boundRadius=this.radius=c;this.startPoint=Vec2(a,b-c);this.updateInertia()};Common.extend(Circle,Body);
Circle.prototype.move=function(a){this.startPoint=this.startPoint.add(a);this.center=this.center.add(a);return this};Circle.prototype.rotate=function(a){this.angle+=a;this.startPoint=this.startPoint.rotate(this.center,a);return this};Circle.prototype.updateInertia=function(){0===this.invMass?this.interia=0:this.inertia=1/this.invMass*this.radius*this.radius/12};
var RegularPoly=function(a,b,c,d,f,e,g,h){var l=[];a=Vec2(a,b);c=Vec2(a.x-c,a.y);b=360/d*(Math.PI/180);for(var k=0;k<d;k++)l.push(c),c=c.rotate(a,b);Polygon.call(this,l,f,e,g,h)};Common.extend(RegularPoly,Polygon);var SupportStruct=function(){this.supportPoint=null;this.supportPointDist=0};
Rectangle.prototype.collisionTest=function(a,b){var c=!1;"Circle"===a.type?c=this.collidedRectCirc(a,b):"Rectangle"===a.type?c=this.collidedRectRect(this,a,b):"Polygon"===a.type&&(c=a.collidedPolyRect(a,this,b));return c};var tmpSupport=new SupportStruct;
Rectangle.prototype.findSupportPoint=function(a,b){tmpSupport.supportPointDist=-9999999;tmpSupport.supportPoint=null;for(var c=0;c<this.vertex.length;c++){var d=this.vertex[c].subtract(b);d=d.dot(a);0<d&&d>tmpSupport.supportPointDist&&(tmpSupport.supportPoint=this.vertex[c],tmpSupport.supportPointDist=d)}return tmpSupport.supportPoint};
Rectangle.prototype.findAxisLeastPenetration=function(a,b){var c=999999,d=null;var f=!0;for(var e=0;f&&e<this.faceNormal.length;){f=this.faceNormal[e];f=f.scale(-1);a.findSupportPoint(f,this.vertex[e]);if((f=null!==tmpSupport.supportPoint)&&tmpSupport.supportPointDist<c){c=tmpSupport.supportPointDist;d=e;var g=tmpSupport.supportPoint}e+=1}f&&(a=this.faceNormal[d].scale(c),b.setInfo(c,this.faceNormal[d],g.add(a)));return f};var collisionInfoR1=new CollisionInfo,collisionInfoR2=new CollisionInfo;
Rectangle.prototype.collidedRectRect=function(a,b,c){var d,f=!1;if(d=a.findAxisLeastPenetration(b,collisionInfoR1))if(f=b.findAxisLeastPenetration(a,collisionInfoR2))collisionInfoR1.getDepth()<collisionInfoR2.getDepth()?(a=collisionInfoR1.getNormal().scale(collisionInfoR1.getDepth()),c.setInfo(collisionInfoR1.getDepth(),collisionInfoR1.getNormal(),collisionInfoR1.start.subtract(a))):c.setInfo(collisionInfoR2.getDepth(),collisionInfoR2.getNormal().scale(-1),collisionInfoR2.start);return d&&f};
Rectangle.prototype.collidedRectCirc=function(a,b){var c=!0,d=-99999,f=0,e;for(e=0;4>e;++e){var g=a.center;var h=g.subtract(this.vertex[e]);h=h.dot(this.faceNormal[e]);if(0<h){d=h;f=e;c=!1;break}h>d&&(d=h,f=e)}if(c)c=this.faceNormal[f].scale(a.radius),b.setInfo(a.radius-d,this.faceNormal[f],g.subtract(c));else if(c=g.subtract(this.vertex[f]),e=this.vertex[(f+1)%4].subtract(this.vertex[f]),h=c.dot(e),0>h){d=c.length();if(d>a.radius)return!1;f=c.normalize();c=f.scale(-a.radius);b.setInfo(a.radius-d,
f,g.add(c))}else if(c=g.subtract(this.vertex[(f+1)%4]),e=e.scale(-1),h=c.dot(e),0>h){d=c.length();if(d>a.radius)return!1;f=c.normalize();c=f.scale(-a.radius);b.setInfo(a.radius-d,f,g.add(c))}else if(d<a.radius)c=this.faceNormal[f].scale(a.radius),b.setInfo(a.radius-d,this.faceNormal[f],g.subtract(c));else return!1;return!0};
Circle.prototype.collisionTest=function(a,b){var c=!1;"Circle"===a.type?c=this.collidedCircCirc(this,a,b):"Rectangle"===a.type?c=a.collidedRectCirc(this,b):"Polygon"===a.type&&(c=a.collidedPolyCirc(this,b));return c};
Circle.prototype.collidedCircCirc=function(a,b,c){var d=b.center.subtract(a.center),f=a.radius+b.radius,e=d.length();if(e>Math.sqrt(f*f))return!1;0!==e?(a=d.scale(-1).normalize().scale(b.radius),c.setInfo(f-e,d.normalize(),b.center.add(a))):a.radius>b.radius?c.setInfo(f,new Vec2(0,-1),a.center.add(Vec2(0,a.radius))):c.setInfo(f,new Vec2(0,-1),b.center.add(Vec2(0,b.radius)));return!0};Circle.prototype.findInterval=function(a){a=a.perp();a=this.center.dot(a);return{min:a,max:a}};
Polygon.prototype.collisionTest=function(a,b){var c=!1;"Polygon"===a.type?c=this.collidedPolyPoly(this,a,b):"Rectangle"===a.type?c=this.collidedPolyRect(this,a,b):"Circle"===a.type&&(c=this.collidedPolyCirc(a,b));return c};
Polygon.prototype.collidedPolyPoly=function(a,b,c){if(a.bodyID>b.bodyID){var d=b;b=a;a=d}d=a.polygonOverlaps(b);if(!d)return!1;0>d.minNormal.dot(b.center.subtract(a.center))&&(d.minNormal=d.minNormal.scale(-1));a=b.findSupportPoint(d.minNormal);c.setInfo(d.minOverlap,d.minNormal,a[0]);return!0};
Polygon.prototype.collidedPolyCirc=function(a,b){var c=null,d=999999,f=this.findClosestVertex(a).subtract(a.center).normalize();var e=this.findInterval(f);var g=a.findInterval(f);var h=Math.min(e.max-g.min,g.max-e.min);if(g.max+a.radius<e.min||e.max<g.min-a.radius)return!1;h<d&&(d=h+a.radius,c=f.perp());for(var l=0;l<this.faceNormal.length;l++){var k=this.faceNormal[l];e=this.findInterval(k);g=a.findInterval(k);h=Math.min(e.max-g.min,g.max-e.min);if(g.max+a.radius<e.min||e.max<g.min-a.radius)return!1;
h<d&&(d=h+a.radius,c=k.perp())}e=f.scale(a.radius);b.setInfo(d,c.scale(-1),a.center.add(e));return!0};
Polygon.prototype.collidedPolyRect=function(a,b,c){var d={minNormal:null,minOverlap:999999};if(!this.projectOntoAxes(a,b,d)||!this.projectOntoAxes(b,a,d))return!1;0>d.minNormal.dot(b.center.subtract(a.center))&&(d.minNormal=d.minNormal.scale(-1));a=a.findSupportPoint(d.minNormal.scale(-1));b.findSupportPoint(d.minNormal,a[0]);d.minNormal.scale(d.minOverlap);c.setInfo(d.minOverlap,d.minNormal,a[0]);return!0};
Polygon.prototype.polygonOverlaps=function(a){var b={minNormal:null,minOverlap:999999};return this.projectOntoAxes(this,a,b)&&a.projectOntoAxes(this,a,b)?b:!1};
Polygon.prototype.projectOntoAxes=function(a,b,c){for(var d,f,e,g,h=0;h<a.faceNormal.length;h++){e=a.faceNormal[h];d=a.findInterval(e);f=b.findInterval(e);g=Math.min(d.max-f.min,f.max-d.min);if(f.max<d.min||d.max<f.min)return this.lineColor=null,!1;g<c.minOverlap&&(c.minOverlap=g,c.minNormal=e.perp())}for(h=0;h<b.faceNormal.length;h++){e=b.faceNormal[h];d=a.findInterval(e);f=b.findInterval(e);g=Math.min(d.max-f.min,f.max-d.min);if(f.max<d.min||d.max<f.min)return this.lineColor=null,!1;g<c.minOverlap&&
(c.minOverlap=g,c.minNormal=e.perp())}return!0};Polygon.prototype.findSupportPoint=function(a){for(var b=[],c=99999,d,f,e,g=0;g<this.vertex.length;g++)f=this.vertex[g],d=f.dot(a),d<c&&(c=d,b[0]=f,e=g);d=e+1>=this.vertex.length?0:e+1;g=0>e-1?this.vertex.length-1:e-1;f=this.vertex[g];e=f.dot(a);f=this.vertex[d];a=f.dot(a);b[1]=e===c?this.vertex[g]:a===c?this.vertex[d]:e<a?this.vertex[g]:this.vertex[d];return b};
Polygon.prototype.findClosestVertex=function(a){for(var b=this.vertex[0],c=b.subtract(a.center).length(),d=c,f=b,e=1;e<this.vertex.length;e++)b=this.vertex[e],c=b.subtract(a.center).length(),c<d&&(d=c,f=b);return f};
Polygon.prototype.notIntersecting=function(a,b,c,d,f,e){if(d.max<c.min){if(0>=b)return!0;var g=(c.min-d.max)/b;g>f&&(f=g);if(f>a)return!0;g=(c.max-d.min)/b;g<e&&(e=g);if(f>e)return!0}else if(c.max<d.min){if(0<=b)return!0;g=(c.max-d.min)/b;g>f&&(f=g);if(f>a)return!0;g=(c.min-d.max)/b;g<e&&(e=g);if(f>e)return!0}else if(0<b){if(g=(c.max-d.min)/b,g<e&&(e=g),f>e)return!0}else if(0>b&&(g=(c.min-d.max)/b,g<e&&(e=g),f>e))return!0;return!1};var constraintIndex=new Indexer;
function Constraint(a,b,c,d){this.index=constraintIndex.incrementIndex();this.bodyA=a;this.bodyB=b;this.restingAngleA=this.bodyA.angle;this.restingAngleB=this.bodyB.angle;this.length=c;this.stiffness=d;this.minLength=1E-7}Constraint.prototype.maintainConstraint=function(){};Constraint.prototype.updateLink=function(){};Constraint.prototype.initialiseConstraint=function(){};function DistanceConstraint(a,b,c,d){Constraint.call(this,a,b,c,d);this.initialiseConstraint()}
Common.extend(DistanceConstraint,Constraint);DistanceConstraint.prototype.maintainConstraint=function(a){a=this.bodyB.center.subtract(this.bodyA.center);var b=a.length();b<this.length||(a=a.scale((b-this.length)/b*.5),this.bodyA.velocity=this.bodyA.velocity.add(a.scale(this.bodyA.invMass*this.stiffness)),this.bodyB.velocity=this.bodyB.velocity.subtract(a.scale(this.bodyB.invMass*this.stiffness)))};
DistanceConstraint.prototype.initialiseConstraint=function(){var a=this.bodyB.center.subtract(this.bodyA.center),b=a.length(),c=b-this.length;a=a.scale(1/b);if(0<c||0>c)0==this.bodyB.invMass?this.bodyA.move(a.scale(c)):0==this.bodyA.invMass?this.bodyB.move(a.scale(c)):(this.bodyA.move(a.scale(c/2)),this.bodyB.move(a.scale(-c/2)))};
function NaiveDistance(a,b,c,d){Constraint.call(this,a,b,c,d);this.minLength=5E-7;a=this.bodyA.center.add(this.bodyB.center);this.constraintLink=new Rectangle(a.x/2,a.y/2,this.bodyA.center.distance(this.bodyB.center),1,0,.2,0,{name:"rod"})}Common.extend(NaiveDistance,Constraint);
NaiveDistance.prototype.maintainConstraint=function(a){var b=this.bodyA.center,c=this.bodyB.center,d=c.subtract(b);c=b.subtract(c);b=d.length();c.length();c=d.normalize();d=d.normalize().scale(this.length);var f=!1;b<this.minLength&&(b=this.minLength);b>this.length?(a.setInfo(this.length-b,c,this.bodyB.center.add(d)),f=!0):b<this.length&&(a.setInfo(this.length-b,c.scale(-1),this.bodyB.center.add(d)),f=!0);return f};
NaiveDistance.prototype.updateLink=function(){this.middlePoint=this.bodyA.center.add(this.bodyB.center);this.constraintLink.center.x=this.middlePoint.x/2;this.constraintLink.center.y=this.middlePoint.y/2;this.constraintLink.width=this.bodyA.center.distance(this.bodyB.center);this.constraintLink.angle=this.bodyA.center.angleFromVector(this.bodyB.center)};NaiveDistance.prototype.updateConstraint=function(){this.maintainConstraint();this.updateLink()};
function Spring(a,b,c,d,f){Constraint.call(this,a,b,c,d);this.centerA=this.bodyA.center;this.dampingConstant=.0025;f&&f.damping&&(this.dampingConstant=f.dampingConstant)}Common.extend(Spring,Constraint);
Spring.prototype.maintainConstraint=function(a){var b=this.bodyB.center.subtract(this.bodyA.center);var c=b.length();b=b.scale(1/c);var d=c-this.length;c=this.bodyB.velocity.subtract(this.bodyA.velocity).dot(b);d=b.dot(Vec2(this.stiffness*d,this.stiffness*d));b=b.scale(d+c*this.dampingConstant);d=this.bodyA.inertia*this.bodyB.inertia/(this.bodyA.inertia+this.bodyB.inertia);c=-(d/a.updateIntervalInSeconds)*this.stiffness*this.restingAngleA*20-.5*this.bodyA.angle;a=-(d/a.updateIntervalInSeconds)*this.stiffness*
this.restingAngleB*20-.5*this.bodyB.angle;this.bodyA.velocity=this.bodyA.velocity.add(b.scale(this.bodyA.invMass));this.bodyB.velocity=this.bodyB.velocity.subtract(b.scale(this.bodyB.invMass));this.bodyA.angularVelocity+=c;this.bodyB.angularVelocity+=a;this.bodyA.velocity.x+=this.centerA.x-this.bodyA.center.x};function Factory(){}Factory.prototype.createSquareGrid=function(a,b,c,d,f,e,g,h,l){for(var k=0,n=[],m=0;m<e*f;m+=f)for(var p=0;p<e*f;p+=f)n[k]=new Kala.Rectangle(m+a,p+b,c,d,g,h,l),k++;return n};
Factory.prototype.createCircleGrid=function(a,b,c,d,f,e,g,h){for(var l=0,k=[],n=0;n<f*d;n+=d)for(var m=0;m<f*d;m+=d)k[l]=new Kala.Circle(n+a,m+b,c,e,g,h),l++;return k};var Kala={};
Kala=function(){Kala.Vec2=Vec2;Kala.Indexer=Indexer;Kala.Engine=Engine;Kala.Physics=Physics;Kala.Body=Body;Kala.Rectangle=Rectangle;Kala.Circle=Circle;Kala.Render=PixiRender;Kala.Common=Common;Kala.Constraint=Constraint;Kala.DistanceConstraint=DistanceConstraint;Kala.NaiveDistance=NaiveDistance;Kala.Spring=Spring;Kala.Events=Events;Kala.Factory=Factory;return Kala}();
