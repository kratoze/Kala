var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};
$jscomp.polyfill("Object.values",function(a){return a?a:function(a){var b=[],d;for(d in a)$jscomp.owns(a,d)&&b.push(a[d]);return b}},"es8","es3");function Vec2(a,b){return new Vec2.init(a,b)}Vec2.init=function(a,b){this.x=a;this.y=b};Vec2.init.prototype=Vec2.prototype;Vec2.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Vec2.prototype.add=function(a){return Vec2(a.x+this.x,a.y+this.y)};Vec2.prototype.subtract=function(a){return Vec2(this.x-a.x,this.y-a.y)};
Vec2.prototype.scale=function(a){return Vec2(this.x*a,this.y*a)};Vec2.prototype.dot=function(a){return this.x*a.x+this.y*a.y};Vec2.prototype.cross=function(a){return this.x*a.y-this.y*a.x};Vec2.prototype.rotate=function(a,b){var c=[],d=this.x-a.x,e=this.y-a.y;c[0]=d*Math.cos(b)-e*Math.sin(b);c[1]=d*Math.sin(b)+e*Math.cos(b);c[0]+=a.x;c[1]+=a.y;return Vec2(c[0],c[1])};Vec2.prototype.normalize=function(){var a=this.length();0<a&&(a=1/a);return Vec2(this.x*a,this.y*a)};
Vec2.prototype.distance=function(a){var b=this.x-a.x;a=this.y-a.y;return Math.sqrt(b*b+a*a)};Vec2.prototype.midpoint=function(a){return Vec2((this.x+a.x)/2,(this.y+a.y)/2)};Vec2.prototype.vectorFromAngle=function(a,b){return Vec2(a*Math.cos(b),a*Math.sin(b))};Vec2.prototype.angleFromVector=function(a){return Math.atan2(this.y-a.y,this.x-a.x)};
function Engine(){var a=this;this.hasChanged=this.movement=!1;this.currentTime;this.elapsedTime;this.previousTime=performance.now();this.lagTime=0;this.kFPS=60;this.updateIntervalInSeconds=this.frameTime=1/this.kFPS;this.kMPF=1E3*this.frameTime;this.allBodies=[];this.allConstraints=[];this.physics=new Kala.Physics;this.events=new Kala.Events;this.collisionResponse;this.gravity=Vec2(0,10);this.add=function(b){if(Array.isArray(b))b.forEach(function(b){b instanceof Body&&(a.allBodies.push(b),a.applyGravity(a.allBodies[a.allBodies.length-
1]))});else if(b instanceof Body)a.allBodies.push(b),this.applyGravity(a.allBodies[a.allBodies.length-1]);else throw"Only objects of type Body can be added to the engine";};this.removeBodyByIndex=function(a){this.allBodies.splice(a,1)};this.removeBody=function(a){a=this.allBodies.indexOf(a);-1!=a&&this.removeBodyByIndex(a);this.hasChanged=!0};this.addConstraint=function(a){this.allConstraints.push(a)};this.removeConstraint=function(a){this.allConstraints.splice(a,1)};this.applyGravityAllBodies=function(){for(var b=
0;b<a.allBodies.length;b++)this.applyGravity(a.allBodies[b])};this.applyGravity=function(a){a.acceleration=0!==a.invMass?this.gravity:Vec2(0,0)};this.update=function(){for(var a=0;a<this.allBodies.length;a++)this.allBodies[a].update(this)};this.runGameLoop=function(b){requestAnimationFrame(function(){a.runGameLoop(b)});a.currentTime=performance.now();a.elapsedTime=a.currentTime-a.previousTime;a.previousTime=a.currentTime;a.lagTime+=a.elapsedTime;this.events.customEvents&&Object.values(this.events.customEvents).forEach(function(a){a.call()});
this.collisionInfo&&Object.values(this.events.collisionEvents).forEach(function(a){a.call()});for(b&&b.update(this);a.lagTime>=a.kMPF;)a.lagTime-=a.kMPF,this.physics.maintainConstraints(a),this.collisionInfo=this.physics.collision(this),this.update(b)};this.initializeEngineCore=function(b){a.runGameLoop(b)}}
function PixiRender(a,b,c,d){var e;function f(){e=PIXI.Sprite.from("imgs/circle.png").texture;switch(c){case "stone":k=g.loader.resources.sheet.textures["elementMetal011.png"];break;case "space":k=g.loader.resources.ship.texture;e=g.loader.resources.asteroid1.texture;break;case "pool":k=g.loader.resources.wood.texture}}var g=this;this.app=new PIXI.Application({height:a,width:b,backgroundColor:16579791,antialias:!0});this.scale=d;document.body.appendChild(this.app.view);this.app.stage.scale.x=this.app.stage.scale.y=
d;var h={};this.bodyContainer=new PIXI.Container;this.lineContainer=new PIXI.Container;this.loader=new PIXI.Loader;c=c||"stone";var k=e=void 0;switch(c){case "space":this.loader.add("ship","imgs/AsteroidGame/enemyBlue3.png").add("asteroid1","imgs/AsteroidGame/meteorBrown_big1.png").add("explosion","imgs/AsteroidGame/ExplosionAnimation.json").load(f);break;case "stone":this.loader.add("sheet","imgs/spritesheet_metal.json").load(f);break;case "pool":this.loader.add("wood","imgs/PoolGameImgs/woodTexture.jpg").add("whiteball",
"imgs/PoolGameImgs/whiteball.png").add("poolballs","imgs/PoolGameImgs/redball.png").add("pot","imgs/PoolGameImgs/pot.png").load(f)}this.app.stage.addChild(this.bodyContainer);this.app.stage.addChild(this.lineContainer);this.addRectangle=function(a){h[a.bodyID]=new PIXI.Sprite(a.render.texture||k);h[a.bodyID].anchor.x=h[a.bodyID].anchor.y=.5;this.bodyContainer.addChild(h[a.bodyID]);h[a.bodyID].renderUpdate=this.updateBody;return h[a.bodyID]};this.addCircle=function(a){h[a.bodyID]=new PIXI.Sprite(a.render.texture||
e);h[a.bodyID].anchor.x=h[a.bodyID].anchor.y=.5;h[a.bodyID].height=h[a.bodyID].width=2*a.radius;this.bodyContainer.addChild(h[a.bodyID]);h[a.bodyID].renderUpdate=this.updateBody;return h[a.bodyID]};this.addPolygon=function(a){h[a.bodyID]||(h[a.bodyID]=new PIXI.Graphics,this.bodyContainer.addChild(h[a.bodyID]));h[a.bodyID].renderUpdate=this.updatePolygon;return h[a.bodyID]};this.addShape=function(a){switch(a.type){case "Rectangle":return this.addRectangle(a);case "Circle":return this.addCircle(a);
case "Polygon":return this.addPolygon(a)}};this.addSprites=function(a){if(Array.isArray(a))for(var b=0;b<a.length;b++)this.addSprite(a[b]);else this.addSprite(a)};this.removeSprite=function(a){a=this.bodyContainer.getChildAt(a);void 0!=a&&this.bodyContainer.removeChild(a)};this.drawLine=function(a,b){var c=new PIXI.Graphics;c.clear();this.lineContainer.addChild(c);c.lineStyle(1,0,1);c.moveTo(a.x,a.y);c.lineTo(b.x,b.y)};this.renderEdge=function(a,b){};this.updateBody=function(a){var b=h[a.bodyID];
b.position.x=a.center.x;b.position.y=a.center.y;b.width=a.radius?2*a.radius:a.width;b.height=a.radius?2*a.radius:a.height;b.rotation=a.angle};this.updatePolygon=function(a){var b=h[a.bodyID];b.clear();b.lineStyle(1,a.lineColor||260348);b.lineColor;b.drawPolygon(a.verticesToPath());for(b=0;b<a.vertices.length;b++)g.drawLine(a.vertices[b],a.vertices[b].add(a.faceNormals[b].scale(10)));g.drawLine(a.vertices[a.vertices.length-1],a.vertices[a.vertices.length-1].add(a.faceNormals[a.faceNormals.length-1].scale(10)))};
this.clear=function(){h={};this.bodyContainer.removeChildren();this.lineContainer.removeChildren()};this.update=function(a){this.clear();a.hasChanged=!1;a=a.allBodies;for(var b,c=0;c<a.length;c++)(b=h[a[c].bodyID])||(b=this.addShape(a[c])),b.renderUpdate(a[c])}}
function Physics(){var a=function(a,c,d){if(0!==a.invMass||0!==c.invMass){var b=a.invMass,f=c.invMass,g=d.getDepth()/(b+f)*.8;g=d.getNormal().scale(g);a.move(g.scale(-b));c.move(g.scale(f));b=d.getNormal();f=d.start.scale(c.invMass/(a.invMass+c.invMass));d=d.end.scale(a.invMass/(a.invMass+c.invMass));f=f.add(d);d=f.subtract(a.center);f=f.subtract(c.center);g=a.velocity.add(Vec2(-1*a.angularVelocity*d.y,a.angularVelocity*d.x));g=c.velocity.add(Vec2(-1*c.angularVelocity*f.y,c.angularVelocity*f.x)).subtract(g);
var h=g.dot(b);if(!(0<h)){var k=Math.min(a.restitution,c.restitution),p=Math.min(a.friction,c.friction),m=d.cross(b),l=f.cross(b);h=-(1+k)*h/(a.invMass+c.invMass+m*m*a.inertia+l*l*c.inertia);var n=b.scale(h);a.velocity=a.velocity.subtract(n.scale(a.invMass));c.velocity=c.velocity.add(n.scale(c.invMass));a.angularVelocity-=m*h*a.inertia;c.angularVelocity+=l*h*c.inertia;b=g.subtract(b.scale(g.dot(b)));b=b.normalize().scale(-1);d=d.cross(b);f=f.cross(b);g=-(1+k)*g.dot(b)*p;g/=a.invMass+c.invMass+d*d*
a.inertia+f*f*c.inertia;g>h&&(g=h);n=b.scale(g);a.velocity=a.velocity.subtract(n.scale(a.invMass));c.velocity=c.velocity.add(n.scale(c.invMass));a.angularVelocity-=d*g*a.inertia;c.angularVelocity+=f*g*c.inertia}}};return{collision:function(b){var c,d,e,f=new CollisionInfo;for(e=0;15>e;e++)for(c=0;c<b.allBodies.length;c++)for(d=c+1;d<b.allBodies.length;d++)if(b.allBodies[c].boundTest(b.allBodies[d])&&b.allBodies[c].collisionTest(b.allBodies[d],f)){0>f.getNormal().dot(b.allBodies[d].center.subtract(b.allBodies[c].center))&&
f.changeDir();if(!0===b.allBodies[c].isSensor||!0===b.allBodies[d].isSensor)return f.bodyA=b.allBodies[c],f.bodyAIndex=c,f.bodyB=b.allBodies[d],f.bodyBIndex=d,f;a(b.allBodies[c],b.allBodies[d],f)}},maintainConstraints:function(b){var c,d=new CollisionInfo;for(c=0;c<b.allConstraints.length;c++)b.allConstraints[c].maintainConstraint(d)&&a(b.allConstraints[c].bodyA,b.allConstraints[c].bodyB,d)},positionalCorrectionFlag:!0}}var Common={};
(function(){Common.globalID=0;Common.extend=function(a,b){b=Object.create(b.prototype);b.constructor=a;a.prototype=b;return a};Common.incrementIndexer=function(){return Common.globalID+=1}})();function Indexer(){this.bodyIndex=-1}Indexer.prototype.incrementIndex=function(){return this.bodyIndex+=1};function Events(){this.customEvents={};this.collisionEvents={}}Events.prototype.addCustomEvent=function(a){this.customEvents[a.name]=a};
Events.prototype.addCollisionEvent=function(a){this.collisionEvents[a.name]=a};var bodyIndex=new Indexer;
function Body(a,b,c,d,e,f){this.bodyID=Common.incrementIndexer();this.center=Vec2(a,b);this.inertia=0;this.invMass=void 0!==c?c:1;this.friction=void 0!==d?d:.8;this.restitution=void 0!==e?e:.2;this.velocity=Vec2(0,0);0!==this.invMass&&(this.invMass=1/this.invMass);this.acceleration=Vec2(0,0);this.boundRadius=this.angularAcceleration=this.angularVelocity=this.angle=0;this.isSensor=!1;this.dampenValue=.985;this.render={};f&&(this.isSensor=void 0!=f.isSensor?f.isSensor:!1,this.name=f.name&&"string"===
typeof f.name?f.name:"unnamed",this.dampen=f.dampen&&"boolean"===typeof f.dampen?f.dampen:!1,f.dampenValue&&(this.dampenValue=f.dampenValue),this.bodyPositionalCorrection=f.bodyPositionalCorrection?f.bodyPositionalCorrection:!0)}
Body.prototype.update=function(a){a.movement&&(a=a.updateIntervalInSeconds,this.velocity=this.velocity.add(this.acceleration.scale(a)),this.dampen&&(this.velocity=this.velocity.scale(this.dampenValue),this.angularVelocity*=this.dampenValue),this.move(this.velocity.scale(a)),this.angularVelocity+=this.angularAcceleration*a,this.rotate(this.angularVelocity*a))};Body.prototype.boundTest=function(a){a.center.subtract(this.center).length();return!0};
Body.prototype.updateMass=function(a){var b=0!==this.invMass?1/this.invMass:0;b+=a;0>=b?(this.invMass=0,this.velocity=Vec2(0,0),this.acceleration=Vec2(0,0),this.angularAcceleration=this.angularVelocity=0):this.invMass=1/b;this.updateInertia()};Body.prototype.addAcceleration=function(a){this.acceleration=this.acceleration.add(a)};Body.prototype.subtractAcceleration=function(a){this.acceleration=this.acceleration.subtract(a)};Body.prototype.updateInertia=function(){};
function CollisionInfo(){this.bodyA;this.bodyB;this.bodyAIndex;this.bodyBIndex;this.depth=0;this.normal=new Vec2(0,0);this.start=new Vec2(0,0);this.end=new Vec2(0,0)}CollisionInfo.prototype.setNormal=function(a){this.normal=a};CollisionInfo.prototype.getDepth=function(){return this.depth};CollisionInfo.prototype.setDepth=function(a){this.depth=a};CollisionInfo.prototype.getNormal=function(){return this.normal};
CollisionInfo.prototype.setInfo=function(a,b,c){this.depth=a;this.normal=b;this.start=c;this.end=c.add(b.scale(a))};CollisionInfo.prototype.changeDir=function(){this.normal=this.normal.scale(-1);var a=this.start;this.start=this.end;this.end=a};var Polygon=function(a,b,c,d,e,f,g,h){this.vertices=c;a=this.findCentroid();Body.call(this,a.x,a.y,e,f,g,h);this.type="Polygon";this.edges=this.getEdges();this.faceNormals=this.getFaceNormals()};Common.extend(Polygon,Body);
Polygon.prototype.move=function(a){for(var b=0;b<this.vertices.length;b++)this.vertices[b]=this.vertices[b].add(a);this.edges=this.getEdges();this.faceNormals=this.getFaceNormals();this.center=this.center.add(a);return this};Polygon.prototype.rotate=function(a){this.angle+=a;for(var b=0;b<this.vertices.length;b++)this.vertices[b]=this.vertices[b].rotate(this.center,a);this.edges=this.getEdges();this.faceNormals=this.getFaceNormals()};Polygon.prototype.updateInertia=function(){};
Polygon.prototype.getEdges=function(){for(var a=[],b=0;b<this.vertices.length-1;b++)a[b]=this.vertices[b+1].subtract(this.vertices[b]);a[a.length]=this.vertices[0].subtract(this.vertices[this.vertices.length-1]);return a};Polygon.prototype.getFaceNormals=function(){for(var a=[],b=0;b<this.edges.length;b++)a[b]=Vec2(this.edges[b].y,-this.edges[b].x),a[b]=a[b].normalize();return a};
Polygon.prototype.verticesToPath=function(){for(var a=[],b=0;b<this.vertices.length;b++)a.push(this.vertices[b].x),a.push(this.vertices[b].y);return a};Polygon.prototype.findCentroid=function(){for(var a=0,b,c,d,e=Vec2(0,0),f=0;f<this.vertices.length-1;f++)c=this.vertices[f],d=this.vertices[f+1],b=c.x*d.y-d.x*c.y,a+=b,e.x+=(c.x+d.x)*b,e.y+=(c.y+d.y)*b;c=this.vertices[this.vertices.length-1];d=this.vertices[0];b=c.x*d.y-d.x*c.y;e.x+=(c.x+d.x)*b;e.y+=(c.y+d.y)*b;a=(a+b)/2;e.x/=6*a;e.y/=6*a;return e};
var centroidGraphic=new PIXI.Graphics;Polygon.prototype.draw=function(a){centroidGraphic.clear();a.app.stage.addChild(centroidGraphic);centroidGraphic.lineStyle(1);centroidGraphic.drawCircle(this.center.x,this.center.y,10)};
var Rectangle=function(a,b,c,d,e,f,g,h){Body.call(this,a,b,e,f,g,h);this.type="Rectangle";this.width=c;this.height=d;this.boundRadius=Math.sqrt(c*c+d*d)/2;this.vertex=[];this.faceNormal=[];this.vertex[0]=new Vec2(a-c/2,b-d/2);this.vertex[1]=new Vec2(a+c/2,b-d/2);this.vertex[2]=new Vec2(a+c/2,b+d/2);this.vertex[3]=new Vec2(a-c/2,b+d/2);this.faceNormal[0]=this.vertex[1].subtract(this.vertex[2]);this.faceNormal[0]=this.faceNormal[0].normalize();this.faceNormal[1]=this.vertex[2].subtract(this.vertex[3]);
this.faceNormal[1]=this.faceNormal[1].normalize();this.faceNormal[2]=this.vertex[3].subtract(this.vertex[0]);this.faceNormal[2]=this.faceNormal[2].normalize();this.faceNormal[3]=this.vertex[0].subtract(this.vertex[1]);this.faceNormal[3]=this.faceNormal[3].normalize();this.updateInertia()};Common.extend(Rectangle,Body);Rectangle.prototype.move=function(a){var b;for(b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].add(a);this.center=this.center.add(a);return this};
Rectangle.prototype.rotate=function(a){this.angle+=a;var b;for(b=0;b<this.vertex.length;b++)this.vertex[b]=this.vertex[b].rotate(this.center,a);this.faceNormal[0]=this.vertex[1].subtract(this.vertex[2]);this.faceNormal[0]=this.faceNormal[0].normalize();this.faceNormal[1]=this.vertex[2].subtract(this.vertex[3]);this.faceNormal[1]=this.faceNormal[1].normalize();this.faceNormal[2]=this.vertex[3].subtract(this.vertex[0]);this.faceNormal[2]=this.faceNormal[2].normalize();this.faceNormal[3]=this.vertex[0].subtract(this.vertex[1]);
this.faceNormal[3]=this.faceNormal[3].normalize();return this};Rectangle.prototype.updateInertia=function(){0===this.invMass?this.inertia=0:(this.inertia=1/this.invMass*(this.width*this.width+this.height*this.height)/12,this.inertia=1/this.inertia)};var Circle=function(a,b,c,d,e,f,g){Body.call(this,a,b,d,e,f,g);this.type="Circle";this.boundRadius=this.radius=c;this.startPoint=Vec2(a,b-c);this.updateInertia()};Common.extend(Circle,Body);
Circle.prototype.move=function(a){this.startPoint=this.startPoint.add(a);this.center=this.center.add(a);return this};Circle.prototype.rotate=function(a){this.angle+=a;this.startPoint=this.startPoint.rotate(this.center,a);return this};Circle.prototype.updateInertia=function(){0===this.invMass?this.interia=0:this.inertia=1/this.invMass*this.radius*this.radius/12};Rectangle.prototype.collisionTest=function(a,b){return"Circle"===a.type?this.collidedRectCirc(a,b):this.collidedRectRect(this,a,b)};
var SupportStruct=function(){this.supportPoint=null;this.supportPointDist=0},tmpSupport=new SupportStruct;Rectangle.prototype.findSupportPoint=function(a,b){tmpSupport.supportPointDist=-9999999;tmpSupport.supportPoint=null;for(var c=0;c<this.vertex.length;c++){var d=this.vertex[c].subtract(b);d=d.dot(a);0<d&&d>tmpSupport.supportPointDist&&(tmpSupport.supportPoint=this.vertex[c],tmpSupport.supportPointDist=d)}};
Rectangle.prototype.findAxisLeastPenetration=function(a,b){var c=999999,d=null;var e=!0;for(var f=0;e&&f<this.faceNormal.length;){e=this.faceNormal[f];e=e.scale(-1);a.findSupportPoint(e,this.vertex[f]);if((e=null!==tmpSupport.supportPoint)&&tmpSupport.supportPointDist<c){c=tmpSupport.supportPointDist;d=f;var g=tmpSupport.supportPoint}f+=1}e&&(a=this.faceNormal[d].scale(c),b.setInfo(c,this.faceNormal[d],g.add(a)));return e};var collisionInfoR1=new CollisionInfo,collisionInfoR2=new CollisionInfo;
Rectangle.prototype.collidedRectRect=function(a,b,c){var d,e=!1;if(d=a.findAxisLeastPenetration(b,collisionInfoR1))if(e=b.findAxisLeastPenetration(a,collisionInfoR2))collisionInfoR1.getDepth()<collisionInfoR2.getDepth()?(a=collisionInfoR1.getNormal().scale(collisionInfoR1.getDepth()),c.setInfo(collisionInfoR1.getDepth(),collisionInfoR1.getNormal(),collisionInfoR1.start.subtract(a))):c.setInfo(collisionInfoR2.getDepth(),collisionInfoR2.getNormal().scale(-1),collisionInfoR2.start);return d&&e};
Rectangle.prototype.collidedRectCirc=function(a,b){var c=!0,d=-99999,e=0,f;for(f=0;4>f;++f){var g=a.center;var h=g.subtract(this.vertex[f]);h=h.dot(this.faceNormal[f]);if(0<h){d=h;e=f;c=!1;break}h>d&&(d=h,e=f)}if(c)c=this.faceNormal[e].scale(a.radius),b.setInfo(a.radius-d,this.faceNormal[e],g.subtract(c));else if(c=g.subtract(this.vertex[e]),f=this.vertex[(e+1)%4].subtract(this.vertex[e]),h=c.dot(f),0>h){d=c.length();if(d>a.radius)return!1;e=c.normalize();c=e.scale(-a.radius);b.setInfo(a.radius-d,
e,g.add(c))}else if(c=g.subtract(this.vertex[(e+1)%4]),f=f.scale(-1),h=c.dot(f),0>h){d=c.length();if(d>a.radius)return!1;e=c.normalize();c=e.scale(-a.radius);b.setInfo(a.radius-d,e,g.add(c))}else if(d<a.radius)c=this.faceNormal[e].scale(a.radius),b.setInfo(a.radius-d,this.faceNormal[e],g.subtract(c));else return!1;return!0};Circle.prototype.collisionTest=function(a,b){return"Circle"===a.type?this.collidedCircCirc(this,a,b):a.collidedRectCirc(this,b)};
Circle.prototype.collidedCircCirc=function(a,b,c){var d=b.center.subtract(a.center),e=a.radius+b.radius,f=d.length();if(f>Math.sqrt(e*e))return!1;0!==f?(a=d.scale(-1).normalize().scale(b.radius),c.setInfo(e-f,d.normalize(),b.center.add(a))):a.radius>b.radius?c.setInfo(e,new Vec2(0,-1),a.center.add(Vec2(0,a.radius))):c.setInfo(e,new Vec2(0,-1),b.center.add(Vec2(0,b.radius)));return!0};Polygon.prototype.collisionTest=function(a,b){var c=!1;"Polygon"===a.type&&(c=this.collidedPolyPoly(a,b));return c};
Polygon.prototype.collidedPolyPoly=function(a,b){b=a.velocity.subtract(this.velocity);for(var c,d,e,f=0;f<this.faceNormals.length;f++)if(c=this.faceNormals[f],d=this.computeInterval(this,c),e=this.computeInterval(a,c),c=b.dot(c),this.notIntersecting(1,c,d,e,0,999999))return this.lineColor=null,!1;for(f=0;f<a.faceNormals.length;f++)if(c=a.faceNormals[f],d=this.computeInterval(this,c),e=this.computeInterval(a,c),c=b.dot(c),this.notIntersecting(1,c,d,e,0,999999))return this.lineColor=null,!1;this.lineColor=
"0xfc030f";return!0};Polygon.prototype.collidedPolyRect=function(){};Polygon.prototype.collidedPolyCirc=function(){};Polygon.prototype.computeInterval=function(a,b){for(var c,d={min:999999,max:-999999},e=0;e<a.vertices.length;e++)c=a.vertices[e].dot(b),c<d.min?(d.min=c,d.start=a.vertices[e]):c>d.max&&(d.max=c,d.start=a.vertices[e]);console.log(d);return d};
Polygon.prototype.notIntersecting=function(a,b,c,d,e,f){if(d.max<c.min){if(0>=b)return!0;var g=(c.min-d.max)/b;g>e&&(e=g);if(e>a)return!0;g=(c.max-d.min)/b;g<f&&(f=g);if(e>f)return!0}else if(c.max<d.min){if(0<=b)return!0;g=(c.max-d.min)/b;g>e&&(e=g);if(e>a)return!0;g=(c.min=d.max)/b;g<f&&(f=g);if(e>f)return!0}else if(0<b){if(g=(c.max-d.min)/b,g<f&&(f=g),e>f)return!0}else if(0>b&&(g=(c.min-d.max)/b,g<f&&(f=g),e>f))return!0;return!1};var constraintIndex=new Indexer;
function Constraint(a,b,c,d){this.index=constraintIndex.incrementIndex();this.bodyA=a;this.bodyB=b;this.restingAngleA=this.bodyA.angle;this.restingAngleB=this.bodyB.angle;this.length=c;this.stiffness=d}Constraint.prototype.maintainConstraint=function(){};Constraint.prototype.updateLink=function(){};Constraint.prototype.initialiseConstraint=function(){};
function DistanceConstraint(a,b,c,d){Constraint.call(this,a,b,c,d);this.minLength=.005;this.restingAngleA=this.bodyA.angle;this.restingAngleB=this.bodyB.angle;this.previousRelDist=this.bodyB.center.subtract(this.bodyA.center).length()-this.length;this.reducedMass=1/(1/this.bodyA.invMass+1/this.bodyB.invMass);0===this.bodyA.invMass&&(console.log(this.bodyA.invMass),this.bodyA.invMass=this.reducedMass,this.bodyB.invMass=this.reducedMass);this.initialiseConstraint()}
Common.extend(DistanceConstraint,Constraint);
DistanceConstraint.prototype.maintainConstraint=function(a){var b=this.bodyB.center.subtract(this.bodyA.center),c=b.length();b.scale(1/c);var d=c-this.length,e=-(.1/a.updateIntervalInSeconds)*Math.min(d+.8,0);.8>c&&(b-=.8);b=b.scale(1/c);a=b.scale(d+e*a.updateIntervalInSeconds);this.previousRelDist=d;this.bodyA.velocity=this.bodyA.velocity.add(a.scale(this.bodyA.invMass*this.stiffness));this.bodyB.velocity=this.bodyB.velocity.subtract(a.scale(this.bodyB.invMass*this.stiffness));d=Vec2(0,0).angleFromVector(b)+
this.restingAngleA-.985*this.bodyA.angle;a=Vec2(0,0).angleFromVector(b)-this.bodyB.angle;this.bodyA.angularVelocity+=d*this.bodyA.inertia;this.bodyB.angularVelocity-=a*this.bodyB.inertia};
DistanceConstraint.prototype.initialiseConstraint=function(){var a=this.bodyB.center.subtract(this.bodyA.center),b=a.length(),c=b-this.length;a=a.scale(1/b);if(0<c||0>c)0==this.bodyB.invMass?this.bodyA.move(a.scale(c)):0==this.bodyA.invMass?this.bodyB.move(a.scale(c)):(this.bodyA.move(a.scale(c/2)),this.bodyB.move(a.scale(-c/2)))};
function NaiveDistance(a,b,c,d){Constraint.call(this,a,b,c,d);this.minLength=5E-7;a=this.bodyA.center.add(this.bodyB.center);this.constraintLink=new Rectangle(a.x/2,a.y/2,this.bodyA.center.distance(this.bodyB.center),1,0,.2,0,{name:"rod"})}Common.extend(NaiveDistance,Constraint);
NaiveDistance.prototype.maintainConstraint=function(a){var b=this.bodyA.center,c=this.bodyB.center,d=c.subtract(b);c=b.subtract(c);b=d.length();c.length();c=d.normalize();d=d.normalize().scale(this.length);var e=!1;b<this.minLength&&(b=this.minLength);b>this.length?(a.setInfo(this.length-b,c,this.bodyB.center.add(d)),e=!0):b<this.length&&(a.setInfo(this.length-b,c.scale(-1),this.bodyB.center.add(d)),e=!0);return e};
NaiveDistance.prototype.updateLink=function(){this.middlePoint=this.bodyA.center.add(this.bodyB.center);this.constraintLink.center.x=this.middlePoint.x/2;this.constraintLink.center.y=this.middlePoint.y/2;this.constraintLink.width=this.bodyA.center.distance(this.bodyB.center);this.constraintLink.angle=this.bodyA.center.angleFromVector(this.bodyB.center)};NaiveDistance.prototype.updateConstraint=function(){this.maintainConstraint();this.updateLink()};
function Spring(a,b,c,d,e){Constraint.call(this,a,b,c,d);this.centerA=this.bodyA.center;this.dampingConstant=.0025;e&&e.damping&&(this.dampingConstant=e.dampingConstant)}Common.extend(Spring,Constraint);
Spring.prototype.maintainConstraint=function(a){var b=this.bodyB.center.subtract(this.bodyA.center);var c=b.length();b=b.scale(1/c);var d=c-this.length;c=this.bodyB.velocity.subtract(this.bodyA.velocity).dot(b);d=b.dot(Vec2(this.stiffness*d,this.stiffness*d));b=b.scale(d+c*this.dampingConstant);d=this.bodyA.inertia*this.bodyB.inertia/(this.bodyA.inertia+this.bodyB.inertia);c=-(d/a.updateIntervalInSeconds)*this.stiffness*this.restingAngleA*20-.5*this.bodyA.angle;a=-(d/a.updateIntervalInSeconds)*this.stiffness*
this.restingAngleB*20-.5*this.bodyB.angle;this.bodyA.velocity=this.bodyA.velocity.add(b.scale(this.bodyA.invMass));this.bodyB.velocity=this.bodyB.velocity.subtract(b.scale(this.bodyB.invMass));this.bodyA.angularVelocity+=c;this.bodyB.angularVelocity+=a;this.bodyA.velocity.x+=this.centerA.x-this.bodyA.center.x};function Factory(){}Factory.prototype.createSquareGrid=function(a,b,c,d,e,f,g,h,k){for(var p=0,m=[],l=0;l<f*e;l+=e)for(var n=0;n<f*e;n+=e)m[p]=new Kala.Rectangle(l+a,n+b,c,d,g,h,k),p++;return m};
Factory.prototype.createCircleGrid=function(a,b,c,d,e,f,g,h){for(var k=0,p=[],m=0;m<e*d;m+=d)for(var l=0;l<e*d;l+=d)p[k]=new Kala.Circle(m+a,l+b,c,f,g,h),k++;return p};var Kala={};
Kala=function(){Kala.Vec2=Vec2;Kala.Indexer=Indexer;Kala.Engine=Engine;Kala.Physics=Physics;Kala.Body=Body;Kala.Rectangle=Rectangle;Kala.Circle=Circle;Kala.Render=PixiRender;Kala.Common=Common;Kala.Constraint=Constraint;Kala.DistanceConstraint=DistanceConstraint;Kala.NaiveDistance=NaiveDistance;Kala.Spring=Spring;Kala.Events=Events;Kala.Factory=Factory;return Kala}();
